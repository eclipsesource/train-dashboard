/*******************************************************************************
 * Copyright (c) 2012 EclipseSource and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    EclipseSource - initial API and implementation
 ******************************************************************************/
package com.eclipsesource.train.dashboard.model;

import java.util.Date;
import java.util.List;


public class Train {
  
  private String status;
  private Date started;
  private Date finished;
  private Date nextrun;
  private String train_nr;
  private List<StationInfo> stations;
  
  public String getStatus() {
    return status;
  }
  
  public Date getStarted() {
    return started;
  }
  
  public Date getFinished() {
    return finished;
  }
  
  public Date getNextRun() {
    return nextrun;
  }
  
  public String getTrainNr() {
    return train_nr;
  }
  
  public List<StationInfo> getStations() {
    return stations;
  }
  
  @Override
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append( train_nr );
    stringBuilder.append( ": Status=" + status );
    stringBuilder.append( ", Started=" + started );
    stringBuilder.append( ", Finished=" + finished );
    stringBuilder.append( ", NextRun=" + nextrun );
    return stringBuilder.toString();
  }

  // generated by Eclipse, ugly but sufficient for the moment
  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ( ( finished == null )
                                                    ? 0
                                                    : finished.hashCode() );
    result = prime * result + ( ( nextrun == null )
                                                   ? 0
                                                   : nextrun.hashCode() );
    result = prime * result + ( ( started == null )
                                                   ? 0
                                                   : started.hashCode() );
    result = prime * result + ( ( stations == null )
                                                    ? 0
                                                    : stations.hashCode() );
    result = prime * result + ( ( status == null )
                                                  ? 0
                                                  : status.hashCode() );
    result = prime * result + ( ( train_nr == null )
                                                    ? 0
                                                    : train_nr.hashCode() );
    return result;
  }

  @Override
  public boolean equals( Object obj ) {
    if( this == obj )
      return true;
    if( obj == null )
      return false;
    if( getClass() != obj.getClass() )
      return false;
    Train other = ( Train )obj;
    if( finished == null ) {
      if( other.finished != null )
        return false;
    } else if( !finished.equals( other.finished ) )
      return false;
    if( nextrun == null ) {
      if( other.nextrun != null )
        return false;
    } else if( !nextrun.equals( other.nextrun ) )
      return false;
    if( started == null ) {
      if( other.started != null )
        return false;
    } else if( !started.equals( other.started ) )
      return false;
    if( stations == null ) {
      if( other.stations != null )
        return false;
    } else if( !stations.equals( other.stations ) )
      return false;
    if( status == null ) {
      if( other.status != null )
        return false;
    } else if( !status.equals( other.status ) )
      return false;
    if( train_nr == null ) {
      if( other.train_nr != null )
        return false;
    } else if( !train_nr.equals( other.train_nr ) )
      return false;
    return true;
  }
  
}
